# 
# This script is intended to maintain the basic functionality of
# the following Rev objects:
# 	dnPhyloCTMCDASequence
#   fnRangeEvolutionRateModifier
#   fnRateGeneratorSequence
#   mvCharacterHistory
#   mnCharHistoryNewick
#
# Michael Landis, Yale University
# michael.landis@yale.edu
#

############
# SETTINGS #
############

seed(12345)

#my_rv = rnorm(1,0,1)[1]
#print("1. my_rv = " + my_rv)

# helper vars
mvi = 1
mni = 1
n_gens      = 1e2
sample_freq = 1e1

# files
phy_fn   = "data/phy.n2.tre"
biogeo_fn = "data/phy.n2.bg.nex"

getwd()

########
# DATA #
########

# tree
phy_full   <- readTrees(phy_fn)[1]
phy        <- phy_full
taxa       <- phy.taxa()
n_taxa     <- taxa.size()
n_branches <- 2 * n_taxa - 2

# adjacencies
graph_biogeo <- [ [1, 1], [1, 1] ]
n_chars    <- 2
n_states   <- 2

#########
# MODEL #
#########

# clock rates
clock_biogeo <- 1

# graph rate modifiers
rate_modifiers[1] := fnRangeEvolutionRateModifier(gainFactor=0.0,
                                                  lossFactor=0.0,
                                                  matrix=graph_biogeo,
                                                  numChars=n_chars)

# rate matrix per area
r_gain <- 0.2
r_loss <- 0.3
r[1][1] := abs(0)
r[1][2] := r_gain
r[2][1] := r_loss
r[2][2] := abs(0)
Q_site := fnFreeK( r, rescaled=false, matrixExponentialMethod="eigen")

# rate map for sequence
Q_seq  := fnRateGeneratorSequence(Q=Q_site,
                                  numChars=n_chars,
                                  rateModifiers=rate_modifiers)

# cladogenetic probabilities
event_types = [ "a", "s" ]
event_probs <- simplex(1,1)
P_seq := fnDECCladoProbs( numCharacters=n_chars,
                          eventProbs=event_probs,
                          eventTypes=event_types )

my_rv = rnorm(1,0,1)[1]
#print("2. my_rv = " + my_rv)

# character evolution

### problem starts here???
seq ~ dnPhyloCTMCDASequence(tree=phy,
                            Q=Q_seq,
                            cladoProbs=P_seq,
                            branchRates=clock_biogeo,
                            type="Standard",
                            nSites=n_chars)

my_rv = rnorm(1,0,1)[1]
#print("3. my_rv = " + my_rv)

# read and clamp data
dat_sim = readDiscreteCharacterData(biogeo_fn)
seq.clamp(dat_sim)

my_rv = rnorm(1,0,1)[1]
#print("4. my_rv = " + my_rv)

# sample histories
mv[mvi++] = mvCharacterHistory(ctmc=seq, qmap_seq=Q_seq, graph="cladogenetic", proposal="rejection", weight=1, lambda=1.0, tuneTarget=0.3)


my_rv = rnorm(1,0,1)[1]
#print("5. my_rv = " + my_rv)


# monitors
mn[mni++] = mnScreen(clock_biogeo, printgen=sample_freq)
mn[mni++] = mnModel(file="output/mcmc_DEC_DA.model.log", printgen=sample_freq)
#output/mcmc_DEC.out
mn[mni++] = mnCharHistoryNewick(filename="output/mcmc_DEC_DA.ch.tre",
                                ctmc=seq,
                                tree=phy,
                                printgen=sample_freq)

# model
mdl = model(phy)

my_rv = rnorm(1,0,1)[1]
#print("6. my_rv = " + my_rv)

# mcmc
ch = mcmc(mv, mn, mdl)

my_rv = rnorm(1,0,1)[1]
#print("7. my_rv = " + my_rv)

# run
ch.run(n_gens)

my_rv = rnorm(1,0,1)[1]
#print("8. my_rv = " + my_rv)

# done
quit()

